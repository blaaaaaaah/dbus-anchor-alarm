   /usr/lib/node_modules/signalk-server/node_modules/@canboat/canboatjs/bin/candumpjs can0 | grep 
   
   
   
      nmea_message = nmea_message.__dict__
        nmea_message['data'] = bytearray([39, 153, 6, 0, 0, 51, 241, 0])



# fields":{"Manufacturer Code":275},"data":{"type":"Buffer","data":[19,153,4,5,0,0,1,0]}}}                                                                           │·································
#NFO:__main__:{'canId': 150929433, 'prio': 2, 'src': 25, 'dst': 255, 'pgn': 65280, 'timestamp': '2025-06-14T00:44:50.723Z', 'fields': {'Manufacturer Code': 275}, '│·································
#data': {'type': 'Buffer', 'data': [19, 153, 4, 5, 0, 0, 1, 0]}}                                                                                                    │·································
#DEBUG:__main__:Received 65280 : 13 99 04 05 00 00 01 00)                                                                                                           │·································
#DEBUG:nmea_bridge:received {"event":"on_NMEA_message","message":{"canId":150929433,"prio":2,"src":25,"dst":255,"pgn":65280,"timestamp":"2025-06-14T00:44:50.951Z","│·································
#fields":{"Manufacturer Code":275},"data":{"type":"Buffer","data":[19,153,4,5,0,0,1,0]}}}                                                                           │·································
#INFO:__main__:{'canId': 150929433, 'prio': 2, 'src': 25, 'dst': 255, 'pgn': 65280, 'timestamp': '2025-06-14T00:44:50.951Z', 'fields': {'Manufacturer Code': 275}, '│·································
#data': {'type': 'Buffer', 'data': [19, 153, 4, 5, 0, 0, 1, 0]}}                                                                                                    │·································
#DEBUG:__main__:Received 65280 : 13 99 04 05 00 00 01 00) 
        '''
{'canId': 486473750,
 'data': {'data': [39, 153, 6, 0, 0, 51, 241, 0], 'type': 'Buffer'},
 'dst': 255,
 'fields': {'Manufacturer Code': 295},
 'pgn': 65280,
 'prio': 7,
 'src': 22,
 'timestamp': '2025-06-14T01:08:40.234Z'}

ON :

DEBUG:_main_:We have a CZone message
{'canId': 486473750,
 'data': {'data': [39, 153, 6, 0, 0, 51, 244, 0], 'type': 'Buffer'},
 'dst': 255,
 'fields': {'Manufacturer Code': 295},
 'pgn': 65280,
 'prio': 7,
 'src': 22,
 'timestamp': '2025-06-14T01:08:37.059Z'}
 '''




https://github.com/ttlappalainen/NMEA2000/issues/128#issuecomment-797234082

That is normal operation for MFD and other devices, which will have any cross communication on N2k bus. Also my library handles tha automatically. If you tell library which PGNs your device support with ExtendTransmitMessages / ExtendReceiveMessages, it will automatically tell others on request for either 059904 or 126208 all supported PGNs. Library user does not need to care of that functionality - just tell library supported PGNs. Instead if you e.g. support 127501, you should add handler for ISO request (PGN 59904) with SetISORqstHandler and send requested PGN and return true or false, if you do not transmit requested PGN. And if you go futher, you should inherit tN2kGroupFunctionHandler for your PGNs and register those handlers.

I can understand that MFD will enable control buttons, if your deveice informs that you support 127501 as tx and 127502 as rx. But as far as I know 127502 has been marked deprecated, so I do not know what would be the replacement for that.

https://github.com/ttlappalainen/NMEA2000/issues/128#issuecomment-799150901



// TODO


html5 app :

/etc/avahi/services

https://vrm-api-docs.victronenergy.com/#/operations/installations/idSite/settings

http://victron.matsu//garmin/config.json


trigger_XXX should return True/False if they did something





navigation.anchor.position = {
  "latitude": 15.579700536041303,
  "longitude": -61.46167977894117
} / null for off


navigation.anchor.maxRadius / null for off

navigation.anchor.fudgeFactor = tolerance



https://github.com/victronenergy/venus/wiki/howto-add-a-driver-to-Venus

Create settings UI
Create MainScreen UI
Create Alarm control UI
Package

root@victron:~# dbus -y com.victronenergy.settings /Settings RemoveSettings '%["Settings/AnchorAlarm/Configuration/NMEA/Alert/AutoAcknowledgeInterval"]'

dbus -y com.victronenergy.settings /Settings/AnchorAlarm/Configuration/NMEA/SOGRPM RemoveSettings '%["Duration", "RPM", "SOG", "NumberOfEngines"]'

dbus -y com.victronenergy.settings /Settings/AnchorAlarm/Configuration/NMEA/YDAB RemoveSettings '%["AlarmSoundID", "AlarmVolume", "DSAlarmChannel", "DSAlarmMutedChannel", "DSBank", "DSDropPointSetChannel", "NMEAAddress", "StartConfiguration"]'

dbus -y com.victronenergy.settings /Settings/AnchorAlarm/Configuration RemoveSettings '%["MuteDuration", "NoGPSCountThreshold", "RadiusTolerance"]'

dbus -y com.victronenergy.anchoralarm2 /Triggers/AnchorDown SetValue %1






{'canId': 233967124, 'prio': 3, 'src': 20, 'dst': 255, 'pgn': 127502, 'timestamp': '2025-05-19T22:08:57.407Z', 'fields': {'Instance': 222, 'Switch2': 'Off'}, 'description': 'Switch Bank Control'}
{'canId': 233967124, 'prio': 3, 'src': 20, 'dst': 255, 'pgn': 127502, 'timestamp': '2025-05-19T22:08:10.254Z', 'fields': {'Instance': 0, 'Switch2': 'On'}, 'description': 'Switch Bank Control'}








docker run --platform linux/amd64 --name cerbo -p 80:80 -p 1883:1883 -p 3000:3000 -p 502:502 -p 8000:8000 -p 9001:9001  -i victronenergy/venus-docker bash -i 
./start_services.sh
./simulate.sh BCT


